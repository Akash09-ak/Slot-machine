{"version":3,"sources":["SlotMachine.js","App.js","index.js"],"names":["SlotM","props","item","x","y","z","className","App","state","data","emoji","getEmoji","Math","floor","random","refreshHandle","newData","setState","style","fontWeight","onClick","this","length","map","React","Component","ReactDom","render","document","getElementById"],"mappings":"qOA4CmBA,EA1CP,SAACC,GAYP,MAAWA,EAAMC,KAAbC,EAAJ,EAAIA,EAAEC,EAAN,EAAMA,EAAEC,EAAR,EAAQA,EACR,OAAIF,GAAGC,GAAOA,GAAGC,EAGb,mCACA,sBAAKC,UAAU,aAAf,UACE,qBAAIA,UAAU,UAAd,UACGH,EADH,IACOC,EADP,IACWC,KAEX,oBAAIC,UAAU,UAAd,oCAQF,mCACA,sBAAKA,UAAU,aAAf,UACE,qBAAIA,UAAU,UAAd,UACGH,EADH,IACOC,EADP,IACWC,KAEX,oBAAIC,UAAU,UAAd,yCCIGC,E,4MApCbC,MAAM,CAACC,KAAK,I,EAEZC,MAAM,CAAC,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,eAAK,gB,EAE9IC,SAAW,WACT,OAAO,EAAKD,MAAME,KAAKC,MAAoB,GAAdD,KAAKE,Y,EAGpCC,cAAgB,WACf,IAIIC,EAAU,CAACb,EAJT,EAAKQ,WAIQP,EAHb,EAAKO,WAGYN,EAFjB,EAAKM,YAIX,EAAKM,SAAS,CACbR,KAAK,CAACO,GAAF,mBAAa,EAAKR,MAAMC,U,4CAI9B,WACE,OACE,qCACA,qBAAIH,UAAU,UAAd,yBAAoC,sBAAMY,MAAO,CAACC,WAAW,QAAzB,kCAChC,wBAAQC,QAASC,KAAKN,cAAtB,2BACA,+CAAkBM,KAAKb,MAAMC,KAAKa,OAAlC,aACF,qBAAKhB,UAAU,eAAf,SACGe,KAAKb,MAAMC,KAAKc,KAAI,SAACrB,GAClB,OAAO,cAAC,EAAD,CAAOA,KAAMA,gB,GA7BhBsB,IAAMC,WCExBC,IAASC,OACT,mCACA,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.48b59497.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SlotM=(props)=>{\r\n    /*  let x= ':O';\r\n      let y= ':O';\r\n      let z= ':p';*/\r\n    \r\n      \r\n    /* destructuring of objects\r\n      let x= props.x;\r\n      let y= props.y;\r\n      let z= props.z; \r\n      we can also do it with the method below*/\r\n\r\n      let{x,y,z}=props.item;\r\n      if((x==y) && (y==z))\r\n      {\r\n        return(\r\n          <>\r\n          <div className='slot_inner'>\r\n            <h1 className=\"upper-h\">\r\n              {x} {y} {z}\r\n            </h1>\r\n            <h1 className=\"lower-h\">This is matching.</h1>\r\n          </div>\r\n          </>\r\n        );\r\n      }\r\n      else\r\n      {\r\n        return(\r\n          <>\r\n          <div className='slot_inner'>\r\n            <h1 className=\"upper-h\">\r\n              {x} {y} {z}\r\n            </h1>\r\n            <h1 className=\"lower-h\">This is not matching.</h1>\r\n          </div>\r\n          </>\r\n        );\r\n      }\r\n    };\r\n    \r\n\r\n    export default SlotM;","import React from 'react';\r\nimport SlotM from './SlotMachine';\r\n  \r\nclass App extends React.Component {\r\n  state={data:[]}\r\n\r\n  emoji=['😄','🍎','😢','🍌','🍡','🎅','😄','🍎','😢','🍌','🍡','🎅','😄','🍎','😢','🍌','🍡','🎅','😄','🍎','😢','🍌','🍡','🎅','🍒','🍒','🍒','🍒',]\r\n\r\n  getEmoji = () => {\r\n    return this.emoji[Math.floor(Math.random()*28)];\r\n  }\r\n  \r\n  refreshHandle = () => {\r\n   let x=this.getEmoji();\r\n   let y=this.getEmoji();\r\n   let z=this.getEmoji(); \r\n\r\n   let newData = {x:x,y:y,z:z}\r\n\r\n   this.setState({\r\n    data:[newData,...this.state.data]\r\n   })\r\n }\r\n\r\n  render(){\r\n    return(\r\n      <>\r\n      <h1 className=\"heading\"> Welcome to <span style={{fontWeight:'bold'}}>Slot Machine Game</span></h1>\r\n          <button onClick={this.refreshHandle}>Click to play</button>\r\n          <p>You've played {this.state.data.length} times.</p>\r\n        <div className=\"slot_machine\">\r\n          {this.state.data.map((item)=>{\r\n              return <SlotM item={item} />\r\n          })}\r\n\r\n          </div>\r\n      </>\r\n      );\r\n    }\r\n};\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDom.render(\r\n<>\r\n<App/>\r\n</>,\r\ndocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}